{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-36498228-1","body":"# FSLoader\r\n\r\n A complete and lightweight lib for single loading, queue loading and preloading HTML assets.\r\n\r\n## FEATURES\r\n\r\n* Load both binary (Sound files, images) and text files (JSON, XML, TEXT, CSS, JAVASCRIPT, SVG, XML)\r\n* XHR2 ready\r\n* Lightweight\r\n* Preloading\r\n* Lazy Loading\r\n* Queue Loading\r\n\r\n## EXAMPLES\r\n\r\n### SETTING UP A SIMPLE FS LOADER\r\n\r\n```html\r\nvar MainLoader = new FSLoader();\r\nMainLoader.load(\"//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\",{oncomplete:onCompleteJquery});\r\n\r\nfunction onCompleteJquery(){\r\n    console.log(this.data);\r\n}\r\n```\r\n\r\n### LOADABLE FILE TYPES\r\n\r\n```html\r\n//FSLoaderHelpers.TYPE_CSS // DEFAULT\r\n//FSLoaderHelpers.TYPE_JAVASCRIPT : \"script\",\r\n//FSLoaderHelpers.TYPE_CSS : \"css\",\r\n//FSLoaderHelpers.TYPE_IMAGE : \"image\",\r\n//FSLoaderHelpers.TYPE_SOUND : \"sound\",\r\n//FSLoaderHelpers.TYPE_JSON : \"json\",\r\n//FSLoaderHelpers.TYPE_XML : \"xml\",\r\n//FSLoaderHelpers.TYPE_SVG : \"svg\",\r\n//FSLoaderHelpers.TYPE_TEXT : \"text\"\r\n\r\nvar MainLoader = new FSLoader();\r\nMainLoader.load(\"img/logo.png\",{oncomplete:onCompleteImage, loadingType: FSLoaderHelpers.LOAD_AS_BLOB});\r\n\r\nfunction onCompleteImage(){\r\n    console.log(this.data);\r\n}\r\n```\r\n\r\n### LOADING TYPES\r\n\r\n```html\r\n//FSLoaderHelpers.LOAD_AS_TAGS // DEFAULT\r\n//FSLoaderHelpers.LOAD_AS_ARRAY_BUFFER\r\n//FSLoaderHelpers.LOAD_AS_BLOB\r\n//FSLoaderHelpers.LOAD_AS_XHR\r\n\r\nvar MainLoader = new FSLoader();\r\nMainLoader.load(\"img/logo.png\",{oncomplete:onCompleteImage, loadingType: FSLoaderHelpers.LOAD_AS_BLOB});\r\n\r\nfunction onCompleteImage(){\r\n    console.log(this.data);\r\n}\r\n```\r\n\r\n### RETRIES\r\n\r\n```html\r\nvar MainLoader = new FSLoader();\r\nMainLoader.load(\"img/logo.png\",{oncomplete:onCompleteImage, onerror:onErrorLoadingImage, retries:3});\r\n\r\nfunction onCompleteImage() {\r\n    console.log(this.data);\r\n}\r\n\r\nfunction onErrorLoadingImage() {\r\n    console.log(\"ERRO LOADING\"+this);\r\n}\r\n```\r\n\r\n### SETTING UP A QUEUE\r\n\r\n```html\r\nvar queue  = new FSLoaderQueue({onqueuecomplete:onCompleteQueue, onqueueprogress:onProgressQueue);\r\nqueue.add(\"img/logo.png\");\r\nqueue.add(\"//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\", {id:\"jquery-external\", oncomplete:onCompletejQuery});\r\nqueue.add(\"js/libs/jquery-1.8.0.min.js\");\r\nqueue.add(\"logo.php\", {type:FSLoaderHelpers.TYPE_CSS});\r\nqueue.start();\r\n\r\nfunction onProgressQueue () {\r\n    console.log(\"Progress: \"+this.progress);\r\n}\r\n\r\nfunction onCompleteQueue () {\r\n    console.log(\"Queue Complete\");\r\n}\r\n\r\n```\r\n\r\n\r\n### QUEUE EVENTS\r\n\r\n### PRELOADER\r\n\r\n```html\r\n<!-- SET THE ITEMS THAT YOU WANT TO PRELOAD WITH THE DATA TAG 'data-preload=\"true\"' -->\r\n<img src=\"img/logo.png\" data-preload=\"true\" />\r\n```\r\n\r\n```html\r\npreload = new FSPreloader({onqueuecomplete: onCompleteQueue, onqueueprogress: onQueueProgress, ignoreErrors: true});\r\npreload.parseDocument({cssDependencies: true}); //cssDepencies:true parse the loaded CSS and load the background-images used\r\n\r\npreload.add(\"img/logo.png\"); //add another item\r\npreload.start(); //start preloading\r\n\r\nfunction onQueueProgress () {\r\n    console.log(this.progress); //the total progress percentage of the loaded queue\r\n}\r\n\r\nfunction onCompleteQueue () {\r\n    console.log(\"PRELOAD COMPLETE\");\r\n}\r\n\r\n```\r\n\r\n### MIXING PRELOADER\r\n\r\nThe FSPreloader Class extendes the FSLoaderQueue Class, that means that you can interact with a preloader almost like a queue.\r\nSo, you can also add another items to preload that aren't on the DOM.\r\n\r\n```html\r\npreload = new FSPreloader({onqueuecomplete: onCompleteQueue, onqueueprogress: onQueueProgress});\r\npreload.parseDocument({cssDependencies: true});\r\n\r\npreload.add(\"img/logo.png\"); //add another item\r\npreload.add(\"services/test.php\", {id:\"LoginService\", myParam:\"example\", type:FSLoaderHelpers.TYPE_JSON, loadingType:FSLoaderHelpers.LOAD_AS_XHR}); //add a service\r\n\r\npreload.start(); //start preloading\r\n\r\nfunction onQueueProgress () {\r\n    console.log(this.progress); //the total progress percentage of the loaded queue\r\n}\r\n\r\nfunction onCompleteQueue () {\r\n    console.log(\"PRELOAD COMPLETE\");\r\n\r\n    //getting an specific item by ID, if specified on loading\r\n    var item = preload.get(\"LoginService\"); //return a FSLoaderItem, feel free to manipulate it =)\r\n    console.log(item.data);\r\n}\r\n\r\n```\r\n\r\n## Contributing\r\n\r\nFeel free to fork and add issues =)\r\n\r\n\r\n## Project information\r\n\r\n* +(\r\n\r\n## License\r\n\r\n","tagline":"A complete lib for single loading, queue loading and preloading assets.","name":"Fsloader"}